@model ML.Usuario
@{
    ViewBag.Title = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="~/Scripts/jquery-3.4.1.js" type="text/javascript"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.6/jquery.min.js" type="text/javascript"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js" type="text/javascript"></script>
<link href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8/themes/base/jquery-ui.css" rel="Stylesheet" type="text/css" />
<h2>Form</h2>
<div class="row">
    <div class="container">
        <div class="col-md-12">
            <h2>Usuario</h2>
            <h5>Ingrese los datos del usuario:</h5>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <hr />
        </div>
    </div>

    
      
    
    <div class="row">
        <div class="col-md-12">
            @using (Html.BeginForm("Form", "Usuario", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {

                <div class="hidden" style="display: none;">
                    <div class="col-md-4 col-lg-12 col-sm-6">
                        @Html.LabelFor(model => model.IdUsuario)
                        @Html.TextBoxFor(model => model.IdUsuario, new { @class = "form-control", @id = "txtIdUsuario" })
                        @Html.ValidationMessageFor(model => model.IdUsuario)

                    </div>
                </div>

                <div class="col">
                      <div class="col-md-4 col-12 col-sm-6">
                        @Html.LabelFor(model => model.Nombre)
                        @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", @id = "txtNombre", @onkeypress = "return SoloLetras(event,'lblErrorNombre')"})
                        @Html.ValidationMessageFor(model => model.Nombre)
                        <label id = "lblErrorNombre"></label>  @*Mostrar mensaje de error al usuario *@
                    </div>
                </div>

                <div class="col">
                      <div class="col-md-4 col-12 col-sm-6">
                        @Html.LabelFor(model => model.ApellidoPaterno)
                        @Html.TextBoxFor(model => model.ApellidoPaterno, new { @class = "form-control", @id = "txtApellidoPaterno", @onkeypress = "return SoloLetras(event,'lblErrorApellidoPaterno')"})
                        @Html.ValidationMessageFor(model => model.ApellidoPaterno)
                        <label id = "lblErrorApellidoPaterno"></label>  @*Mostrar mensaje de error al usuario *@
                        
                    </div>
                </div>

                <div class="col">
                     <div class="col-md-4 col-12 col-sm-6">
                        @Html.LabelFor(model => model.ApellidoMaterno)
                        @Html.TextBoxFor(model => model.ApellidoMaterno, new { @class = "form-control", @id = "txtApellidoMaterno", @onkeypress = "return SoloLetras(event,'lblErrorApellidoMaterno')"})
                        @Html.ValidationMessageFor(model => model.ApellidoMaterno)
                        <label id = "lblErrorApellidoMaterno"></label>  @*Mostrar mensaje de error al usuario *@
                    </div>
                </div>

                <div class="col">
                    <div class="col-md-4 col-12 col-sm-6">
                        @Html.LabelFor(model => model.Email)
                        @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @id = "txtEmail", @onblur = "return ValidaEmail(event, 'lblErrorEmail')" })
                        @Html.ValidationMessageFor(model => model.Email)
                        <label id = "lblErrorEmail"></label>  @*Mostrar mensaje de error al usuario *@
                    </div>
                </div>

                <div class="col">
                    <div class="col-md-4 col-12 col-sm-6">
                        @Html.LabelFor(model => model.Rol.IdRol)
                        @Html.DropDownListFor(model => model.Rol.IdRol, new SelectList(Model.Rol.Roles, "IdRol", "Nombre"), "Selecciona su Rol correspondiente", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Rol.IdRol)
                    </div>
                </div>

                <div class="col">
                    <div class="col-md-4 col-12 col-sm-6">
                        @Html.LabelFor(model => model.UserName)
                        @Html.TextBoxFor(model => model.UserName, new { @class = "form-control", @id = "txtUserName" })
                        @Html.ValidationMessageFor(model => model.UserName)
                    </div>
                </div>

                <div class="col">
                    <div class="col-md-4 col-12 col-sm-6">
                        @Html.LabelFor(model => model.Password)
                        @Html.TextBoxFor(model => model.Password, new { @class = "form-control", @id = "txtPassword" })
                        @Html.ValidationMessageFor(model => model.Password)
                    </div>
                </div>

                <div class="col">
                    <div class="col-md-4 col-12 col-sm-6">
                        @Html.LabelFor(model => model.Sexo)
                        @*@Html.TextBoxFor(model => model.Sexo, new { @class = "form-control", @id = "txtSexo" })*@
                        @Html.RadioButtonFor(model => model.Sexo, "M")
                        @Html.RadioButtonFor(model => model.Sexo, "F")
                        @Html.ValidationMessageFor(model => model.Sexo)
                    </div>
                </div>

                <div class="col">
                    <div class="col-md-4 col-12 col-sm-6">
                        @Html.LabelFor(model => model.Telefono)
                        @Html.TextBoxFor(model => model.Telefono, new { @class = "form-control", @id = "txtTelefono", @onkeypress = "return SoloNumeros(event,'lblErrorTelefono')"})
                        @Html.ValidationMessageFor(model => model.Telefono)
                        <label id = "lblErrorTelefono"></label>  @*Mostrar mensaje de error al usuario *@
                    </div>
                </div>

                <div class="col">
                    <div class="col-md-4 col-12 col-sm-6">
                        @Html.LabelFor(model => model.Celular)
                        @Html.TextBoxFor(model => model.Celular, new { @class = "form-control", @id = "txtCelular", @onkeypress = "return SoloNumeros(event,'lblErrorCelular')"})
                        @Html.ValidationMessageFor(model => model.Celular)
                        <label id = "lblErrorCelular"></label>  @*Mostrar mensaje de error al usuario *@
                    </div>
                </div>

                <div class="col">
                    <div class="col-md-4 col-12 col-sm-6">
                        @Html.LabelFor(model => model.FechaNacimiento)
                        @Html.TextBoxFor(model => model.FechaNacimiento, new { @type="date", @class = "form-control", @id = "txtFechaNacimiento" })
                        @Html.ValidationMessageFor(model => model.FechaNacimiento)
                    </div>
                </div>

                <div class="col">
                    <div class="col-md-4 col-12 col-sm-6">
                        @Html.LabelFor(model => model.CURP)
                        @Html.TextBoxFor(model => model.CURP, new { @class = "form-control", @id = "txtCURP" })
                        @Html.ValidationMessageFor(model => model.CURP)
                    </div>
                </div>

                  <div class="col">
                    <div class="col-md-4 col-12 col-sm-6">
                        @Html.LabelFor(model => model.Imagen)
                        @Html.TextBoxFor(model => model.Imagen, new { @class = "form-control", @id = "txtImagen" })
                        @Html.ValidationMessageFor(model => model.Imagen)
                    </div>
                </div>

                <div class="col">
                    <div class="col-md-4 col-12 col-sm-6">
                        @Html.LabelFor(model => model.Direccion.Calle)
                        @Html.TextBoxFor(model => model.Direccion.Calle, new { @class = "form-control", @id = "txtCalle" })
                        @Html.ValidationMessageFor(model => model.Direccion.Calle)
                    </div>
                </div>

                <div class="col">
                    <div class="col-md-4 col-12 col-sm-6">
                        @Html.LabelFor(model => model.Direccion.NumeroInterior)
                        @Html.TextBoxFor(model => model.Direccion.NumeroInterior, new { @class = "form-control", @id = "txtNumeroInterior" })
                        @Html.ValidationMessageFor(model => model.Direccion.NumeroInterior)
                    </div>
                </div>

                <div class="col">
                    <div class="col-md-4 col-12 col-sm-6">
                        @Html.LabelFor(model => model.Direccion.NumeroExterior)
                        @Html.TextBoxFor(model => model.Direccion.NumeroExterior, new { @class = "form-control", @id = "txtNumeroExterior" })
                        @Html.ValidationMessageFor(model => model.Direccion.NumeroExterior)
                    </div>
                </div>

               <div class="col-md-3">
                    @Html.LabelFor(model => model.Direccion.Colonia.Municipio.Estado.Pais)
                    @if (Model.Direccion.Colonia.Municipio.Estado.Pais.Paises == null)
                    {
                        @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.Pais.IdPais, new SelectList(string.Empty, "Value", "Text"), "Selecciona un Pais", new { @class = "form-control", @id = "ddlPais" })
                        @Html.ValidationMessageFor(model => model.Direccion.Colonia.Municipio.Estado.Pais.IdPais)
                    }
                    else
                    {
                        @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.Pais.IdPais, new SelectList(Model.Direccion.Colonia.Municipio.Estado.Pais.Paises, "IdPais", "Nombre"), "Selecciona un Pais", new { @class = "form-control", @id = "ddlPais" })
                        @Html.ValidationMessageFor(model => model.Direccion.Colonia.Municipio.Estado.Pais.IdPais)
                    }
                </div>

                <div class="col-md-3">
                    @Html.LabelFor(model => model.Direccion.Colonia.Municipio.Estado)
                    @if (Model.Direccion.Colonia.Municipio.Estado.Estados == null)
                    {
                        @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado, new SelectList(string.Empty, "Value", "Text"), "Selecciona un Estado", new { @class = "form-control", @id = "ddlEstado" })
                        @Html.ValidationMessageFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado)
                    }
                    else
                    {
                        @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado, new SelectList(Model.Direccion.Colonia.Municipio.Estado.Estados, "IdEstado", "Nombre"), "Selecciona un Estado", new { @class = "form-control", @id = "ddlEstado" })
                        @Html.ValidationMessageFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado)
                    }
                </div>

                <div class="col-md-3">
                    @Html.LabelFor(model => model.Direccion.Colonia.Municipio)
                    @if (Model.Direccion.Colonia.Municipio.Municipios == null)
                    {
                        @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.IdMunicipio, new SelectList(string.Empty, "Value", "Text"), "Selecciona un Municipio", new { @class = "form-control", @id = "ddlMunicipio" })
                        @Html.ValidationMessageFor(model => model.Direccion.Colonia.Municipio.IdMunicipio)
                    }
                    else
                    {
                        @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.IdMunicipio, new SelectList(Model.Direccion.Colonia.Municipio.Municipios, "IdMunicipio", "Nombre"), "Selecciona un Municipio", new { @class = "form-control", @id = "ddlMunicipio" })
                        @Html.ValidationMessageFor(model => model.Direccion.Colonia.Municipio.IdMunicipio)
                    }
                </div>

                <div class="col-md-3">
                    @Html.LabelFor(model => model.Direccion.Colonia)
                    @if (Model.Direccion.Colonia.Colonias == null)
                    {
                        @Html.DropDownListFor(model => model.Direccion.Colonia.IdColonia, new SelectList(string.Empty, "Value", "Text"), "Selecciona una Colonia", new { @class = "form-control", @id = "ddlColonia" })
                        @Html.ValidationMessageFor(model => model.Direccion.Colonia.IdColonia)
                    }
                    else
                    {
                        @Html.DropDownListFor(model => model.Direccion.Colonia.IdColonia, new SelectList(Model.Direccion.Colonia.Colonias, "IdColonia", "Nombre"), "Selecciona una Colonia", new { @class = "form-control", @id = "ddlColonia" })
                        @Html.ValidationMessageFor(model => model.Direccion.Colonia.IdColonia)
                    }
                </div>

                <div class="col">
                    <div class="col-md-4 col-12 col-sm-6">
                        @Html.LabelFor(model => model.Direccion.Colonia.CodigoPostal)
                        @Html.TextBoxFor(model => model.Direccion.Colonia.CodigoPostal, new { @class = "form-control", @id = "txtCodigoPostal" })
                        @Html.ValidationMessageFor(model => model.Direccion.Colonia.CodigoPostal)
                    </div>
                </div>



                <div class="col">
                    <div class="col-md-3">
                        <input type="submit" value="Guardar" class="btn btn-success" />
                        @Html.ActionLink("Regresar", "GetAll", "Usuario", htmlAttributes: new { @class = "btn btn-danger" })
                    </div>
                </div>


            }
        </div>
    </div>
</div>

@section scripts
{
<script>
    $(document).ready(function () {
                //Se ejecuta cuando realizamos un cambio en el DDL Plantel
                $("#ddlPais").change(function () {
                    $("#ddlEstado").empty();
                    $.ajax({
                        type: 'GET',
                        url: '@Url.Action("EstadoGetByIdPais")',
                        dataType: 'json',
                        data: { IdPais: $("#ddlPais").val() },
                        success: function (estados) {
                            $("#ddlEstado").append('<option value="0">'+ 'Seleccione una opción' + '</option>');
                            $.each(estados, function (i, estados) {
                                $("#ddlEstado").append('<option value="'
                                                           + estados.idEstado + '">'
                                                           + estados.nombre + '</option>');
                            });
                        },
                        error: function (ex) {
                            alert('Failed.' + ex);
                        }
                    });
                });

             $("#ddlEstado").change(function () {
                    $("#ddlMunucipio").empty();
                    $.ajax({
                        type: 'GET',
                        url: '@Url.Action("MunicipioGetByIdEstado")',
                        dataType: 'json',
                        data: { IdEstado: $("#ddlEstado").val() },
                        success: function (municipios) {
                            $("#ddlMunicipio").append('<option value="0">'+ 'Seleccione una opción' + '</option>');
                            $.each(municipios, function (i, municipios) {
                                $("#ddlMunicipio").append('<option value="'
                                    + municipios.idMunicipio + '">'
                                    + municipios.nombre + '</option>');
                            });
                        },
                        error: function (ex) {
                            alert('Failed.' + ex);
                        }
                    });
                });


          $("#ddlMunicipio").change(function () {
                    $("#ddlColonia").empty();
                    $.ajax({
                        type: 'GET',
                        url: '@Url.Action("ColoniaGetByIdMunicipio")',
                        dataType: 'json',
                        data: { IdMunicipio: $("#ddlMunicipio").val() },
                        success: function (colonias) {
                            $("#ddlColonia").append('<option value="0">'+ 'Seleccione una opción' + '</option>');
                            $.each(colonias, function (i, colonias) {
                                $("#ddlColonia").append('<option value="'
                                                           + colonias.idColonia + '">'
                                                           + colonias.nombre + '</option>');
                            });
                        },
                        error: function (ex) {
                            alert('Failed.' + ex);
                        }
                    });
          });

    });

            function SoloLetras(e, controlId){
                var caracter = e.key;
                if (!/^[a-zA-ZÀ-ÿ\u00f1\u00d1]*$/g.test(caracter)) {
                    $('#' + controlId).text("Solo se aceptan letras");
                     $('#' + controlId).css({ "color": "red"});
                     return false;
                }
                else{
                     $('#' + controlId).text("");
                     return true;
                }
            }

 function SoloNumeros(e, controlId){
                var caracter = e.key;
                if ((event.keyCode < 48) || (event.keyCode > 57))  {
                    $('#' + controlId).text("Solo se aceptan numeros");
                     $('#' + controlId).css({ "color": "red"});
                     return false;
                }
                else{
                     $('#' + controlId).text("");
                     return true;
                }
            }

 function ValidaEmail(e, controlId){
                var caracter = e.key;
	            re=/^([\da-z_\.-]+)@@([\da-z\.-]+)\.([a-z\.]{2,6})$/
	            if(!re.exec(e)){
                    $('#' + controlId).text("No es un email valido");
                     $('#' + controlId).css({ "color": "red"});
                     return false;
                }
                else{
                     $('#' + controlId).text("");
                     return true;
                }
            }

             var j = jQuery.noConflict();
        j(function () {
            j("#txtFechaNacimiento").datepicker({
                dateFormat: 'mm-dd-yy',
                //showOn: 'button',
                //buttonImage: "../../Img/calendar.png",
                //buttonImageOnly: true,
                changeMonth: true,
                changeYear: true
            });
            $(".ui-datepicker-trigger").css("width", "30px");
            $(".ui-datepicker-trigger").css("height", "30px");
        });

</script>
}
